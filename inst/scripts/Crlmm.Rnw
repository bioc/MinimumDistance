<<>>=
library(Beaty)
library(ff)
##library(snow)
##setCluster(4, "SOCK")
cdfName <- "human610quadv1b"
data(samplesheet)
path <- "/thumper/ctsa/beaty/illumina610/Raw_Data/Released_Data/RELEASED_IDATS"
##crlmmVersion <- sessionInfo(package="crlmm")$otherPkgs$crlmm$Version
outdir <- crlmmdir()
dir.create(outdir, recursive=TRUE, showWarnings=FALSE)
ldPath(outdir)
ocProbesets(20e3)
ocSamples(8e3)
options("ffbatchbytes"=20e6)
samplesheet$Sample_ID <- samplesheet$CIDR_Name
index <- 5500:7599
container <- checkExists("container",
			 .path=ldPath(),
			 .FUN=genotype.Illumina,
			 .load.it=FALSE,
			 ##genotype.Illumina arguments
			 batch=as.factor(rep(1, nrow(samplesheet)))[index],
			 arrayNames=samplesheet$filenames[index],
			 gender=samplesheet$Gender[index],
			 highDensity=TRUE,
			 arrayInfoColNames=list(barcode=NULL, position="Human610.Quadv1_B.Sentrix.Position"),  ### "SentrixPosition"),
			 cdfName=cdfName,
			 verbose=TRUE,
			 saveDate=TRUE)
q("no")
@

<<symbolicLinks, eval=FALSE>>=
fns <- list.files(path, full.names=TRUE)
fns <- list.files(fns, full.names=TRUE)
file.symlink(from=fns, to=file.path("/thumper/ctsa/beaty/scharpf/raw", basename(fns)))
@

<<crlmm>>=
plate <- samplesheet$Sample.Plate
group <- samplesheet$Sample.Group
DNA.source <- samplesheet$DNA.Source
DNA.source[grep("blood", DNA.source)] <- "blood"
DNA.source[grep("WGA", DNA.source)] <- "WGA"
DNA.source[c(grep("saliva", DNA.source), grep("buccal", DNA.source), grep("mouth", DNA.source))] <- "mouth"
##cell.lines <- c(grep("CEPH", DNA.source),
##		grep("HAN CHINESE", DNA.source),
##		grep("JAPANESE", DNA.source),
##		grep("Yoruba", DNA.source))
##DNA.source[cell.lines] <- "cell line"
pdf("PlateVsDNAsource.pdf")
par(las=1, mar=c(5, 8, 3, 3))
tab <- table(plate, DNA.source)
image(1:nrow(tab), 1:ncol(tab), tab > 1, xlab="plate", col=c("white", "black"), yaxt="n", ylab="")
axis(2, at=1:ncol(tab), labels=colnames(tab), cex.axis=0.6)
dev.off()

## scan dates?
if(FALSE){
	fns <- list.files(path, full.names=TRUE)
	arrayNames <- list.files(fns, full.names=TRUE)
	arrayNames <- arrayNames[grep("Red.idat", arrayNames)]
	scanDates <- crlmm:::getProtocolData.Illumina(arrayNames)
	save(scanDates, file="scanDates.rda")
	## attach this to the phenoData (should be the same for red and green)
	q("no")
} else load("scanDates.rda")
sns <- basename(sampleNames(scanDates))
sns <- sapply(strsplit(sns, "_Red.idat"), "[[", 1)
sampleNames(scanDates) <- sns
index <- match(samplesheet$sampleNames, sns)
scanDates <- scanDates[index,]
stopifnot(identical(sampleNames(scanDates), samplesheet$sampleNames))
dts <- as.character(scanDates$ScanDate)
dts <- sapply(strsplit(dts, " "), "[[", 1)

##tmp <- strptime(dts, format="%m/%d/%Y")
##dts <- dts[order(tmp)]

tab <- table(plate, dts)
I <- tab > 5
row.sums <- apply(I, 1, sum)
plot(0:1, xlim=c(1, nrow(tab)), ylim=c(1, ncol(tab)), type="n", xaxt="n", yaxt="n", xlab="plate", ylab="date")
for(i in 1:nrow(tab)){
	if(row.sums[i] < 5) next()
	for(j in 1:ncol(tab)){
		cnt <- tab[i,j]
		if(cnt > 0)
			text(i, j, labels=cnt, cex=0.6)
	}
}


cns <- strptime(colnames(tab), "%m/%d/%Y")
tab <- tab[, order(cns)]

dts2 <- strptime(dts, format="%m/%d/%Y")
month <- format(dts2, "%m")
##collapse october november
month[month=="11"] <- "10"

tab.mon=table(plate, month)

image(1:nrow(tab), 1:ncol(tab), tab > 1, xlab="plate", col=c("white", "black"), yaxt="n", ylab="")
axis(2, at=1:ncol(tab), labels=colnames(tab), cex.axis=0.6)

tab3 <- table(plate, month)
image(1:nrow(tab3), 1:ncol(tab3), tab3 > 1, xlab="plate", col=c("white", "black"), yaxt="n", ylab="")
axis(2, at=1:ncol(tab), labels=colnames(tab3), cex.axis=0.6)

## better to analyze by plate or by chemistry plate?
## Do PCA of random sample of 50k nonpolymorphic markers.
##  - look at split from first couple of pc's
## plot pc1-- each sample is a point.  Threshold the pcs to decide splits
## compare to the split by plate and the split by date
##
## try PC on the raw data
##tmp <- getProtocolData.Illumina(arrayNames)
exclude.plate <- names(table(plate))[table(plate) < 20]
index <- which(plate != exclude.plate)
samplesheet <- samplesheet[index, ]
container <- checkExists("container",
			 .path=outdir,
			 .FUN=crlmm:::genotype.Illumina,
			 batch=as.factor(samplesheet$Sample.Plate),
			 arrayNames=samplesheet$filenames,
			 gender=samplesheet$Gender,
			 highDensity=TRUE,
			 arrayInfoColNames=list(barcode=NULL, position="Human610.Quadv1_B.Sentrix.Position"),  ### "SentrixPosition"),
			 cdfName=cdfName)
cnSet <- checkExists("cnSet", .path=outdir, .FUN=crlmmCopynumber, object=container, .load.it=load.it)


tmp <- as.matrix(tab)
dd <- dist(tmp, method="binary")
plot(hclust(dd))

pdf("plateIndexVsdate.pdf")
image(1:nrow(tab), 1:ncol(tab), tab[hclust(dd)$order, ] > 1, xlab="plate", col=c("white", "black"), yaxt="n", ylab="")
axis(2, at=1:ncol(tab), labels=colnames(tab), cex.axis=0.6)
dev.off()


q("no")
@

