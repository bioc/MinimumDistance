<<>>=
library(Beaty)
data(bsSet)
data(minDistanceSet)
data(minDistanceRanges)
data(deletion.ranges)
ldPath(beadstudiodir())
featureData(minDistanceSet) <- featureData(bsSet)
open(copyNumber(minDistanceSet))
open(baf(bsSet))
open(logR(bsSet))
open(minDistanceSet$MAD)
open(bsSet$MAD)
data(jugessur)
## remove amp-amp-normal
offspring.del <- substr(deletion.ranges$state, 3, 3) < 3
deletion.ranges <- deletion.ranges[offspring.del, ]
data(rf)
data(cnv)
w <- cnv$txEnd-cnv$txStart
cnv <- cnv[w >= 10e3, ]
w <- rf$txEnd-rf$txStart
rf <- rf[w >= 10e3, ]
@

<<>>=
CHR <- 22
chr.name <- paste("chr", CHR, sep="")
xlim <- getGenomicAxis(deletion.ranges, CHR=CHR, FRAME=1e6)
xlim[2] <- 22e6
##trace(rangesInXlim, browser)

##cols <- brewer.pal(8, "Dark2")
pdf("figures/rectanglePlot_del_chr22.pdf", onefile=FALSE, width=8, height=6)
grid.newpage()
grid.rectangle(ranges.object=deletion.ranges, CHR=CHR,
	       xlim=xlim,
	       jugessur=jugessur,
	       rf=rf, cnv=cnv,
	       cols=c("grey80", "lightblue"),
	       alpha=0.5)  ## the lighter color is hemizygous del
dev.off()
@

<<chr8>>=
data(deletion.ranges)
CHR <- 8
##xlim <- c(32e6, 33e6)
xlim <- c(38.2e6, 40.2e6)
chr.name <- paste("chr", CHR, sep="")
cols <- brewer.pal(8, "Accent")[4:5]
deletion.ranges <- deletion.ranges[deletion.ranges$state %in% c("321", "231", "221", "331", "332", "431", "432", "341", "342", "442", "441"), ]
pdf("figures/rectanglePlot_del_chr08.pdf", onefile=FALSE, width=8, height=6)
grid.newpage()
##trace(grid.rectangle, browser)
grid.rectangle(ranges.object=deletion.ranges, CHR=CHR,
	       xlim=xlim,
	       jugessur=jugessur,
	       rf=rf, cnv=cnv,
	       cols=cols, ## the lighter color is homozygous del
	       alpha=0.5)
dev.off()

data(deletion.ranges)
CHR <- 4
xlim <- c(68.2e6, 69.9e6)
chr.name <- paste("chr", CHR, sep="")
cols <- brewer.pal(8, "Accent")[4:5]
deletion.ranges <- deletion.ranges[deletion.ranges$state %in% c("321", "231", "221", "331", "332", "431", "432", "341", "342", "442", "441"), ]
pdf("figures/rectanglePlot_del_chr04.pdf", onefile=FALSE, width=8, height=6)
grid.newpage()
##trace(grid.rectangle, browser)
grid.rectangle(ranges.object=deletion.ranges, CHR=CHR,
	       xlim=xlim,
	       jugessur=jugessur,
	       rf=rf, cnv=cnv,
	       cols=cols, ## the lighter color is homozygous del
	       alpha=0.5)
dev.off()
selectedRanges <- rangesInXlim(deletion.ranges, CHR=CHR, xlim)
index <- trioIndices(deletion.ranges, selectedRanges, xlim)
pdf("figures/lowlevel_del_chr04_%02d.pdf", width=10, height=8, onefile=FALSE)
grid.trio(deletion.ranges,
	  distanceRanges=minDistanceRanges,
	  bsSet=bsSet,
	  distanceSet=minDistanceSet,
	  index=index,
	  xlim=xlim, CHR=CHR,
	  ylim=c(-3,1),
	  alpha=0.3)
dev.off()

data(amp.ranges)
amp.ranges <- amp.ranges[amp.ranges$state == "334", ]
selectedRanges <- rangesInXlim(deletion.ranges, CHR=CHR, xlim)
index <- trioIndices(amp.ranges, selectedRanges, xlim)
@

<<>>=
xlim <- getGenomicAxis(deletion.ranges, CHR=CHR, FRAME=1e6)
xlim[2] <- 22e6
selectedRanges <- rangesInXlim(deletion.ranges, CHR=CHR, xlim)
index <- trioIndices(deletion.ranges, selectedRanges, xlim)
##jpeg("figures/lowlevel_del_chr22_%02d.jpg", width=1000, height=800, quality=100, pointsize=18)
pdf("figures/lowlevel_del_chr22_%02d.pdf", width=10, height=8, onefile=FALSE)
grid.trio(deletion.ranges, distanceRanges=minDistanceRanges,
	  bsSet=bsSet,
	  distanceSet=minDistanceSet, index=index[c(3, 12)] , xlim=xlim, CHR=CHR,
	  alpha=0.3)
dev.off()
## Magnify small denovo-events

xlim <- c(16.7, 17.7)*1e6
pdf("figures/lowlevel_del_chr22_2x_%02d.pdf", width=10, height=8, onefile=FALSE)
grid.trio(deletion.ranges, distanceRanges=minDistanceRanges,
	  bsSet=bsSet,
	  distanceSet=minDistanceSet, index=index[12], xlim=xlim, CHR=CHR,
	  cex.pch=0.7,
	  alpha=0.3)
dev.off()

##---------------------------------------------------------------------------
## low-level plots for the possible normal-normal amp on chr6
CHR <- 8
xlim <- c(38.2e6, 40.2e6)
chr.name <- paste("chr", CHR, sep="")
selectedRanges <- rangesInXlim(deletion.ranges, CHR=CHR, xlim)
index <- trioIndices(deletion.ranges, selectedRanges, xlim)
index <- index[sapply(index, length) == 1]
denovo.homozygous <- deletion.ranges$state[unlist(index)] == "331"
denovo.homo.index <- index[denovo.homozygous]
cols <- brewer.pal(8, "Accent")[4:5]
pdf("figures/N-N-Homo_%02d.pdf", width=10, height=8, onefile=FALSE)
##trace(grid.trio, browser)
##trace(grid.trioLogR, browser)
grid.trio(deletion.ranges,
	  distanceRanges=minDistanceRanges,
	  bsSet=bsSet,
	  distanceSet=minDistanceSet,
	  index=denovo.homo.index,
	  xlim=xlim,
	  ylim=c(-3,1),
	  CHR=CHR,
	  cex.pch=0.4,
	  alpha=0.3)
dev.off()


##Denovo-amplifications
data(amp.ranges)
chr.name <- paste("chr", CHR, sep="")
selectedRanges <- rangesInXlim(amp.ranges, CHR=CHR, xlim)
index <- trioIndices(amp.ranges, selectedRanges, xlim)
amp.ranges$state[unlist(index)]
pdf("figures/rectanglePlot_amp_chr08.pdf", onefile=FALSE, width=8, height=6)
grid.newpage()
grid.rectangle(ranges.object=amp.ranges, CHR=CHR,
	       xlim=xlim,
	       jugessur=jugessur,
	       rf=rf, cnv=cnv,
	       cols=c("grey", "grey"),
	       alpha=0.5,
	       deletion.colors=FALSE)  ## the lighter color is hemizygous del
dev.off()

data(maxDistanceRanges)
data(maxDistanceSet)
CHR <- 8
xlim <- c(38.2e6, 40.2e6)
chr.name <- paste("chr", CHR, sep="")
selectedRanges <- rangesInXlim(amp.ranges, CHR=CHR, xlim)
index <- trioIndices(amp.ranges, selectedRanges, xlim)
index <- index[sapply(index, length) == 1]
cols <- brewer.pal(8, "Accent")[4:5]
featureData(maxDistanceSet) <- featureData(minDistanceSet)

pdf("figures/denovoAmp_chr8_%02d.pdf", width=10, height=8, onefile=FALSE)
grid.trio(amp.ranges,
	  distanceRanges=maxDistanceRanges,
	  bsSet=bsSet,
	  distanceSet=maxDistanceSet,
	  index=index,
	  xlim=xlim,
	  CHR=CHR,
	  cex.pch=0.4,
	  alpha=0.3,
	  label="max distance")
dev.off()

@

Illustrate min distance with example on chr22 with some waviness

<<mindistanceExample>>=
CHR <- 22
xlim <- getGenomicAxis(deletion.ranges, CHR=CHR, FRAME=1e6)
xlim[2] <- 22e6
selectedRanges <- rangesInXlim(deletion.ranges, CHR=CHR, xlim)
index <- trioIndices(deletion.ranges, selectedRanges, xlim)
pdf("figures/explainingMindistance_%02d.pdf", width=10, height=8, onefile=FALSE)
explainingMinDistance(deletion.ranges, label="")
explainingMinDistance(deletion.ranges, label="", show.segmentation=TRUE)
explainingMinDistance(deletion.ranges, show.segmentation=TRUE,
		      show.distance=TRUE, label = "-min(Father - Offspring, Mother - Offspring)")
explainingMinDistance(deletion.ranges, show.segmentation=TRUE,
		      label = "-min(Father - Offspring, Mother - Offspring)",
		      show.distance=TRUE,
		      show.distance.segmentation=TRUE,
		      highlight=TRUE,
		      highlight.border="grey40",
		      highlight.col="lightblue",
		      highlight.alpha=0.3)
dev.off()
@

<<annotation>>=
deletion.ranges <- getLocalId(deletion.ranges)
@

<<>>=
CHR <- 1
save.figs <- TRUE
Sweave("ChromosomeFigures.Rnw")
CHR <- 5
xlim <- c(68e6, 72e6)
save.figs <- TRUE
Sweave("ChromosomeFigures.Rnw")

CHR <- 6
xlim <- c(32e6, 33e6)
v <- 1
save.figs <- TRUE
Sweave("ChromosomeFigures.Rnw")

##CHR <- 8
##v <- 1
##save.figs <- TRUE
##Sweave("ChromosomeFigures.Rnw")
##
##rm(xlim)
##v <- 1
##CHR <- 11
##save.figs <- TRUE
##Sweave("ChromosomeFigures.Rnw")
##
##xlim <- c(31.5e6, 33e6)
##CHR <- 16
##v <- 2
##save.figs <- TRUE
##Sweave("ChromosomeFigures.Rnw")
##
##rm(xlim)
##v <- 1
##xlim <- c(41.2e6, 43e6)
##CHR <- 17
##save.figs <- TRUE
##Sweave("ChromosomeFigures.Rnw")
##
##rm(xlim)
##CHR <- 22
##save.figs <- TRUE
##Sweave("ChromosomeFigures.Rnw")
q('no')
@

<<table>>=
chroms <- c(1, 5, 6, 11, 16, 17, 22)
xlims <- matrix(c(1, 102.8, 105.2,
		  5, 68, 72,
		  6, 32, 33,
		  11, 54.8, 55.6,
		  16, 31.5, 33,
		  17, 41, 43,
		  22, 16,21), byrow=TRUE, ncol=3)
xlims[, 2:3] <- xlims[, 2:3]*1e6

tab <- list()
for(i in 1:nrow(xlims)){
	CHR <- xlims[i, 1]
	del <- deletion.ranges[deletion.ranges$chrom == CHR, ]
	del <- del[start(del) <= xlims[i, 3] & end(del) >= xlims[i, 2], ]
	del.df <- as.data.frame(del)
	del.df <- del.df[, -match("others", colnames(del.df))]
	exclude.cols <- match(c("space", "is.deletion", "noCentromere.overlap", "n.overlap"), colnames(del.df))
	tab[[i]] <- del.df[, -exclude.cols]
}
table_coords <- do.call("rbind", tab)
write.table(table_coords, file="figures/table_coords.txt", sep="\t", col.names=T, quote=F, row.names=F)
chrom.id <- split(table_coords$chrom, table_coords$id)
chrom.id <- lapply(chrom.id, unique)
chrom.id <- chrom.id[sapply(chrom.id, length) > 1]
@

<<samplesInMultipleChromosomes>>=
pdf("figures/chrom_vs_sample.pdf", height=7, width=7)
plot(0:10, xlim=c(0, 23), ylim=c(1, length(chrom.id)), xaxt="n", yaxt="n", type="n", ylab="family id", xlab="chromosome",
     main="offspring with denovo deletions in multiple chromosomes")
for(i in seq_along(chrom.id)){
	points(chrom.id[[i]], rep(i, length(chrom.id[[i]])), pch=21)
}
axis(1, at=xlims[, 1], cex.axis=0.8)
par(las=1)
axis(2, at=1:length(chrom.id), labels=substr(names(chrom.id), 1, 5), cex.axis=0.7)
dev.off()
@


