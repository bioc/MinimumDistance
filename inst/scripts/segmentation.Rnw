<<segmentation2,eval=FALSE>>=
minDistanceSet <- checkExists("minDistanceSet", .path=ldPath(), .FUN=load)
BATCHSIZE <- 200
NN <- length(splitIndicesByLength(1:ncol(minDistanceSet), BATCHSIZE))
Stangle("MinDistance.Rnw")
iter <- 164
for(CHR in 20:22){
	for(BATCH in 1:NN){
		sink("temp")
		cat("BATCH <- ", BATCH, "\n")
		cat("BATCHSIZE <- ", BATCHSIZE, "\n")
		cat("CHR <- ", CHR, "\n")
		sink()
		fn <- paste("tmp_", iter, ".R", sep="")
		if(file.exists(fn)) unlink(fn)
		system(paste("cat temp MinDistance.R >", fn))
		system(paste('cat ~/bin/cluster.template | perl -pe "s/Rprog/tmp_', iter, '.R/" > tmp_', iter, '.R.sh', sep=""))
		system(paste("qsub -m e -r y -cwd -l mem_free=10G,h_vmem=16G tmp_", iter, ".R.sh", sep=""))
		Sys.sleep(60*3) ## keeps multiple jobs from trying to load minDistanceSet simultaneously
		iter <- iter+1
	}
	Sys.sleep(60*2)##3 minutes
}
@



For making figures of the denovo deletions based on the minimum distance.
<<figures>>=
Stangle("MinDistanceDeletions")
for(CHR in 2:22){
	sink("temp")
	cat("CHR <- ", CHR, "\n")
	sink()
	fn <- paste("tmpfig_", CHR, ".R", sep="")
	if(file.exists(fn)) unlink(fn)
	system(paste("cat temp MinDistanceDeletions.R >", fn))
	system(paste('cat ~/bin/cluster.template | perl -pe "s/Rprog/tmpfig_', CHR, '.R/" > tmpfig_', CHR, '.R.sh', sep=""))
	system(paste("qsub -m e -r y -cwd -l mem_free=20G,h_vmem=30G tmpfig_", CHR, ".R.sh", sep=""))
	Sys.sleep(60*5) ## keeps multiple jobs from trying to load minDistanceSet simultaneously
}
@



