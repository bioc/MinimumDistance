<<top50>>=
## 1.  plot the index case
## 2.  plot the same region for all of the other cases that were pulled in
top10 <- top10[order(top10$n.overlap, top10$num.mark, decreasing=TRUE), ]
top10 <- top10[-2, ] ## 2nd sample is same as first
bitmap("top20_%02d.png", width=8, height=8, res=500)
for(i in 1:nrow(top10)){
	cat(i, " ")
	if(i == 10) cat("\n")
	mset <- constructTrioSetFromRanges(top10[i, ], minDistanceSet, bsSet)
	CHR <- unique(chromosome(mset))
	ranges.md <- getRanges(outdir,
			       pattern=paste("md.segs.chr", CHR, "_batch", sep=""),
			       name="md.segs", CHR=CHR)
	segmean_ranges <- getSegMeans(outdir, CHR=CHR)
	segmean_ranges2 <- segmean_ranges
	segmean_ranges2$family <- substr(segmean_ranges2$id, 1, 5)
	segmean_ranges2 <- segmean_ranges2[segmean_ranges2$family %in% sampleNames(mset), ]
	layout(matrix(1:8, 8,1, byrow=TRUE), heights=rep(1,8))
	##layout(matrix(1:7, 7,1, byrow=TRUE), heights=rep(1,7))
	par(mar=c(0.5, 0.5, 0.5, 0.5), las=1, oma=c(4, 4, 4, 4))
	plotSegs(index=i,
		 ranges1=top10,
		 ranges.md=ranges.md,
		 ranges2=segmean_ranges2,
		 mset=mset)
	plotCytoband(top10$chrom[i], label.cytoband=FALSE, cytoband.ycoords=c(0.5, 1), bty="o")
	w <- width(top10[i, ])
	FRAME <- w/0.05  * 1/2
	v <- c(start(top10[i, ])-FRAME, end(top10[i, ])+FRAME)
	v[v > max(position(bsSet)[chromosome(bsSet)==CHR])] <- max(position(bsSet)[chromosome(bsSet) == CHR])
	v[v < min(position(bsSet)[chromosome(bsSet)==CHR])] <- min(position(bsSet)[chromosome(bsSet) == CHR])
	abline(v=v, lwd=2, col="orange")
	abline(v=c(start(top10)[i], end(top10)[i]), lty=2)
	mtext(paste("Region", i), side=3, outer=TRUE, adj=0)
	mtext(paste("Sample", i), side=3, outer=TRUE, adj=1)
	##mtext(paste("Chr", CHR, ", ", top10$id[i]), side=3, outer=TRUE)
	subjs <- strsplit(top10$others[i], ", ")[[1]]
	if(is.na(subjs[[1]])) next()
	for(j in seq_along(subjs)){
		##trace(constructTrioSetFromRanges, browser)
		mset <- constructTrioSetFromRanges(top10[i, ], minDistanceSet, bsSet, id=subjs[j])
		segmean_ranges2 <- segmean_ranges
		segmean_ranges2$family <- substr(segmean_ranges2$id, 1, 5)
		segmean_ranges2 <- segmean_ranges2[segmean_ranges2$family %in% sampleNames(mset), ]
##		layout(matrix(1:8, 8,1, byrow=TRUE), heights=rep(1,7))
##		par(mar=c(0.5, 0.5, 0.5, 0.5), las=1, oma=c(4, 4, 4, 4))
##		##trace(plotSegs, browser)
##		plotSegs2(index=i,
##			  ranges1=top10,
##			  ranges.md=ranges.md,
##			  ranges2=segmean_ranges2,
##			  mset=mset)
##		plotCytoband(top10$chrom[i], label.cytoband=FALSE, cytoband.ycoords=c(0, 1), bty="o")
##		w <- width(top10[i, ])
##		FRAME <- w/0.05  * 1/2
##		v <- c(start(top10[i, ])-FRAME, end(top10[i, ])+FRAME)
##		v[v > max(position(bsSet)[chromosome(bsSet)==CHR])] <- max(position(bsSet)[chromosome(bsSet) == CHR])
##		v[v < min(position(bsSet)[chromosome(bsSet)==CHR])] <- min(position(bsSet)[chromosome(bsSet) == CHR])
##		abline(v=v, lwd=2, col="orange")
##		mtext(paste("Region", i), side=3, outer=TRUE, adj=0)
##		mtext(paste("Possible overlap", j), side=3, outer=TRUE, adj=1)
		subject.range <- deletion.ranges[deletion.ranges$id == subjs[j] & deletion.ranges$chrom==CHR, ]
		if(nrow(subject.range) > 1){
			index <- matchMatrix(findOverlaps(IRanges(start(top10[i, ])-FRAME.SHIFT, end(top10[i,])+FRAME.SHIFT),
							  IRanges(start(subject.range), end(subject.range))))[, 2]
			subject.range <- subject.range[index[[1]], ]
		}
		layout(matrix(1:8, 8,1, byrow=TRUE), heights=rep(1,7))
		par(mar=c(0.5, 0.5, 0.5, 0.5), las=1, oma=c(4, 4, 4, 4))
		plotSegs(index=1,
			 ranges1=subject.range,
			 ranges.md=ranges.md,
			 ranges2=segmean_ranges2,
			 mset=mset)
		plotCytoband(subject.range$chrom, label.cytoband=FALSE, cytoband.ycoords=c(0.5, 1), bty="o")
		w <- width(subject.range)
		FRAME <- w/0.05  * 1/2
		abline(v=v, lwd=2, col="orange")
		v2 <- c(start(top10[i, ])-FRAME, end(top10[i, ])+FRAME)
		v2[v2 > max(position(bsSet)[chromosome(bsSet)==CHR])] <- max(position(bsSet)[chromosome(bsSet) == CHR])
		v2[v2 < min(position(bsSet)[chromosome(bsSet)==CHR])] <- min(position(bsSet)[chromosome(bsSet) == CHR])
		abline(v=v2, lwd=2, col="blue")
		abline(v=c(start(top10)[i], end(top10)[i]), lty=2)
		mtext(paste("Region", i), side=3, outer=TRUE, adj=0)
		mtext(paste("Possible overlap", j), side=3, outer=TRUE, adj=1, cex=0.8)
	}
}
dev.off()
@



<<top10, eval=FALSE>>=
ranges <- ranges[order(ranges$num.mark), ]
for(j in 1:nrow(ranges.in.jugessur)){
	mset <- constructTrioSetFromRanges(ranges1=ranges.in.jugessur[j, ],
					   minDistanceSet=minDistanceSet,
					   bsSet=bsSet)
	CHR <- ranges.in.jugessur$chrom[j]
	segmean_ranges <- getSegMeans(outdir, CHR=CHR)
	ranges.md <- getRanges(outdir,
			       pattern=paste("md.segs.chr", CHR, "_batch", sep=""),
			       name="md.segs", CHR=CHR)
	segmean_ranges$family <- substr(segmean_ranges$id, 1, 5)
	segmean_ranges <- segmean_ranges[segmean_ranges$family %in% sampleNames(mset), ]
	layout(matrix(1:7, 7,1, byrow=TRUE), heights=rep(1,7))
	par(mar=c(0.5, 0.5, 0.5, 0.5), las=1, oma=c(4, 4, 4, 4))
	plotSegs(index=j,
		 ranges1=ranges.in.jugessur,
		 ranges.md=ranges.md,
		 ranges2=segmean_ranges,
		 mset=mset)#, FRAME=0.05)
}
@
