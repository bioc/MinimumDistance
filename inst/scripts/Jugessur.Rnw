<<snpnames>>=
library(Beaty)
data(bsSet)
data(minDistanceSet)
data(minDistanceRanges)
data(deletion.ranges)
ldPath(beadstudiodir())
featureData(minDistanceSet) <- featureData(bsSet)
open(copyNumber(minDistanceSet))
open(baf(bsSet))
open(logR(bsSet))

idmap <- read.csv("~/projects2/Beaty/inst/extdata/gwas_to_local_id.csv", stringsAsFactors=FALSE)
idmap <- idmap[idmap$cidr_name %in% deletion.ranges$id, ]
index <- match(deletion.ranges$id, idmap$cidr_name)
idmap <- idmap[index, ]
stopifnot(identical(idmap$cidr_name, deletion.ranges$id))
deletion.ranges$local_id <- idmap$local_id2

jugessur <- read.csv("../extdata/jugessur357_in610quad.csv", stringsAsFactors=FALSE)
jugessur <- jugessur[!is.na(jugessur$start_map_pos) & !is.na(jugessur$stop_map_pos), ]
jugessur <- RangedData(IRanges(jugessur$start_map_pos, jugessur$stop_map_pos),
		       chrom=jugessur$chr, band=jugessur$chromosome, gene=jugessur$gene)
save(jugessur, file="../../data/jugessur.rda")
n.jugessur <- rep(NA, nrow(deletion.ranges))

for(CHR in 1:22){
	index <- which(deletion.ranges$chrom == CHR)
	del <- IRanges(start(deletion.ranges)[index],
		       end(deletion.ranges)[index])
	sub <- IRanges(start(jugessur)[jugessur$chrom == CHR],
		       end(jugessur)[jugessur$chrom == CHR])
	n.jugessur[index] <- countOverlaps(del, sub)
}
jug.df <- as.data.frame(deletion.ranges[deletion.ranges$n.jugessur  > 0, ])
jug.df <- jug.df[, -match(c("space", "others", "n.overlap", "n.jugessur", "noCentromere.overlap", "is.deletion"), colnames(jug.df))]
write.table(jug.df, file="figures/jugessurOverlappingDenovo.txt", sep="\t", col.names=T, quote=F, row.names=F)
@


<<>>=
deletion.ranges[deletion.ranges$n.jugessur > 0 & deletion.ranges$n.overlap > 5, ]
@
