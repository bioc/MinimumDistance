## which chromosomes to plot
<<>>=
library(Beaty)
library(BeatyExperimentData)
data(bsSet2)
data(penn.ranges)
open(baf(bsSet2))
open(logR(bsSet2))
open(bsSet2$MAD)
data(jugessur)
data(rf)
data(cnv)
w <- cnv$txEnd-cnv$txStart
cnv <- cnv[w >= 10e3, ]
w <- rf$txEnd-rf$txStart
rf <- rf[w >= 5e3, ]
penn.ranges$n.overlap <- sapply(penn.ranges$others, function(x) length(strsplit(x, ", ")[[1]]))
@

<<pennRectangles>>=
selectedRanges <- xlim <- list()
for(CHR in 1:22){
	xlim[[CHR]] <- getGenomicAxis(penn.ranges, CHR=CHR, FRAME=1e6)
	selectedRanges[[CHR]] <- rangesInXlim(penn.ranges, CHR=CHR, xlim[[CHR]])
}

w <- cnv$txEnd-cnv$txStart
cnv <- cnv[w >= 500e3, ]
w <- rf$txEnd-rf$txStart
rf <- rf[w >= 500e3, ]

for(CHR in 1:22){
	##jpeg(paste("rectanglePlot_penn_chr", CHR, "_%02d.jpg", sep=""), width=950, height=700)
	pdf(paste("figures/rectanglePlot_penn_chr", CHR, "_%02d.pdf", sep=""), width=10, height=8, onefile=FALSE)
	grid.rectangle(ranges.object=penn.ranges,
		       CHR=CHR,
		       xlim=xlim[[CHR]],
		       jugessur=jugessur,
		       rf=rf, cnv=cnv,
		       cols="grey80",
		       alpha=0.3)
	dev.off()
}



data(deletion.ranges)
dr <- deletion.ranges
state.index <- dr$state %in% c("331", "332", "432", "342", "431", "341", "441", "442", "321", "231")
dr <- dr[state.index, ]
r1 <- rangesInXlim(dr, 8, xlim=xlim[[8]])
r2 <- rangesInXlim(penn.ranges, 8, xlim=xlim[[8]])

for(CHR in 1:22){
	pdf(paste("figures/rectanglePlot_del_chr", CHR, "_%02d.pdf", sep=""), width=10, height=8, onefile=FALSE)
	trace(grid.rectangle, browser)
	grid.rectangle(ranges.object=dr,
		       CHR=CHR,
		       xlim=xlim[[CHR]],
		       jugessur=jugessur,
		       rf=rf, cnv=cnv,
		       cols="grey80",
		       alpha=0.3)
	dev.off()
}

@




<<>>=
penn.ranges <- getLocalId(penn.ranges)
@

<<>>=
rd <- penn.ranges[penn.ranges$num.mark >= 10, ]
rd$n.overlap <- as.integer(sapply(rd$others, function(x) length(strsplit(x, ", ")[[1]])))
##
rd <- penn.ranges[noverlap >= 5, ]
chrom <- unique(rd$chrom)
chrom <- chrom[order(chrom)]
@

<<>>=
for(i in seq_along(chrom)){
	CHR <- chrom[i]
	trace(getGenomicAxis, browser)
	xlim <- getGenomicAxis(rd, CHR=CHR, FRAME=1e6)
	if(diff(xlim) > 5e6){


	}
@
